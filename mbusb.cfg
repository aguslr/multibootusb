# Partition holding files
probe -u $root --set=rootuuid
set imgdevpath="/dev/disk/by-uuid/$rootuuid"
export imgdevpath rootuuid

# Custom variables
set isopath="/boot/isos"
export isopath

# Load modules
insmod regexp
insmod all_video

# MultiBoot USB menu
submenu "Multiboot ->" {

  # Warning for 32-bit systems
  if ! cpuid -l; then
    clear
    echo "This is a 32-bit computer."
    echo "You won't get to use 64-bit software on it."
    echo
    echo -n "To continue, press ESC or wait 10 seconds... "
    sleep --interruptible 10
    echo
    echo
  fi

  # Load custom configuration
  if [ -e "$prefix/mbusb.cfg.local" ]; then
    source "$prefix/mbusb.cfg.local"
  fi

  # Load configuration for ISO/kernel files
  submenu "Boot supported ISO/kernel files ->" {
    echo -n "Loading configuration files... "
    for cfgfile in $prefix/mbusb.d/*.d/*.cfg; do
      source "$cfgfile"
    done
  }

  # Use MEMDISK to load ISO files
  submenu "Use MEMDISK to boot ISO files ->" {
    echo -n "Looking for ISO files... "
    for isofile in $isopath/*.iso; do
      if [ -e "$isofile" ]; then
        regexp --set=isoname "$isopath/(.*)" "$isofile"
        menuentry "$isoname" "$isofile" {
          iso_path="$2"
          bootoptions="iso raw"
          linux16 $prefix/memdisk $bootoptions
          initrd16 $iso_path
        }
      fi
    done
    echo
    echo -n "Looking for ISO files... "
    for imgfile in $isopath/*.img; do
      if [ -e "$imgfile" ]; then
        regexp --set=imgname "$isopath/(.*)" "$imgfile"
        menuentry "$imgname" "$imgfile" {
          img_path="$2"
          bootoptions="raw"
          linux16 $prefix/memdisk $bootoptions
          initrd16 $img_path
        }
      fi
    done
  }

}
