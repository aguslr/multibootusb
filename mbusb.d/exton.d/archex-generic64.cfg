for isofile in $isopath/archex-64bit-*.iso; do
  if [ -e "$isofile" ]; then
    regexp --set=isoname "$isopath/(.*)" "$isofile"
    submenu "$isoname ->" "$isofile" {
      iso_path="$2"
      loopback loop "$iso_path"
      probe --label --set=cd_label (loop)
      menuentry "Boot ArchEX (x86_64)" {
        bootoptions="img_dev=$imgdevpath img_loop=$iso_path earlymodules=loop archisobasedir=arch archisolabel=$cd_label"
        linux (loop)/arch/boot/x86_64/vmlinuz $bootoptions
        initrd (loop)/arch/boot/intel_ucode.img (loop)/arch/boot/x86_64/archiso.img
      }
      menuentry "Boot ArchEX (x86_64) (NBD)" {
        bootoptions="img_dev=$imgdevpath img_loop=$iso_path earlymodules=loop archisobasedir=arch archisolabel=$cd_label archiso_nbd_srv=${pxeserver}"
        linux (loop)/arch/boot/x86_64/vmlinuz $bootoptions
        initrd (loop)/arch/boot/intel_ucode.img (loop)/arch/boot/x86_64/archiso.img
      }
      menuentry "Boot ArchEX (x86_64) (NFS)" {
        bootoptions="img_dev=$imgdevpath img_loop=$iso_path earlymodules=loop archisobasedir=arch archisolabel=$cd_label archiso_nfs_srv=${pxeserver}:/run/archiso/bootmnt"
        linux (loop)/arch/boot/x86_64/vmlinuz $bootoptions
        initrd (loop)/arch/boot/intel_ucode.img (loop)/arch/boot/x86_64/archiso.img
      }
      menuentry "Boot ArchEX (x86_64) (HTTP)" {
        bootoptions="img_dev=$imgdevpath img_loop=$iso_path earlymodules=loop archisobasedir=arch archiso_http_srv=http://${pxeserver}/"
        linux (loop)/arch/boot/x86_64/vmlinuz $bootoptions
        initrd (loop)/arch/boot/intel_ucode.img (loop)/arch/boot/x86_64/archiso.img
      }
      menuentry "Run Memtest86+ (RAM test)" {
        bootoptions=""
        linux16 (loop)/arch/boot/memtest $bootoptions
      }
    }
  fi
done

